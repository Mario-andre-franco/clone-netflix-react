{"version":3,"sources":["Tmdb.js","components/MovieRow.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","axios","get","response","data","HomeList","getHomeList","slug","title","items","MovieRow","className","results","length","map","item","key","src","poster_path","alt","original_title","InicioApp","useState","movieList","setMovieList","useEffect","loadAll","Tmdb","list","ReactDOM","render","StrictMode","enable","document","getElementById"],"mappings":"mPACMA,EAAU,mCAGVC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEMC,IAAMC,IAAN,UAJR,gCAIQ,OAAwBH,IAF9B,cAEXI,EAFW,yBAGVA,EAASC,MAHC,2CAAH,sDAMVC,EAAW,CACfC,YAAY,WAAD,4BAAE,sBAAAN,EAAA,sEAKMF,EAAW,wDAAD,OACmCD,IANnD,gCAGPU,KAAM,WACNC,MAAO,oBACPC,MALO,eAYMX,EAAW,8CAAD,OACyBD,IAbzC,gCAUPU,KAAM,WACNC,MAAO,yBACPC,MAZO,gBAmBMX,EAAW,4CAAD,OACuBD,IApBvC,iCAiBPU,KAAM,WACNC,MAAO,UACPC,MAnBO,gBA0BMX,EAAW,sDAAD,OACiCD,IA3BjD,iCAwBPU,KAAM,SACNC,MAAO,aACPC,MA1BO,gBAiCMX,EAAW,sDAAD,OACiCD,IAlCjD,iCA+BPU,KAAM,UACNC,MAAO,aACPC,MAjCO,gBAwCMX,EAAW,uDAAD,OACkCD,IAzClD,mCAsCPU,KAAM,SACNC,MAAO,SACPC,MAxCO,iBA+CMX,EAAW,yDAAD,OACoCD,IAhDpD,mCA6CPU,KAAM,UACNC,MAAO,UACPC,MA/CO,iBAsDMX,EAAW,sDAAD,OACiCD,IAvDjD,mCAoDPU,KAAM,cACNC,MAAO,kBACPC,MAtDO,mHAAF,kDAAC,IA8DCJ,I,eClDAK,EApBE,SAAC,GAAsB,IAApBF,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzB,OACE,sBAAKE,UAAU,WAAf,UACE,6BAAKH,IACL,qBAAKG,UAAU,sBAAf,SACE,qBAAKA,UAAU,kBAAf,SACGF,EAAMG,QAAQC,OAAS,GACtBJ,EAAMG,QAAQE,KAAI,SAACC,EAAMC,GAAP,OAChB,qBAAeL,UAAU,iBAAzB,SACE,qBACEM,IAAG,yCAAoCF,EAAKG,aAC5CC,IAAKJ,EAAKK,kBAHJJ,cCeTK,G,MArBG,WAChB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAO,uCAAG,4BAAA1B,EAAA,sEACG2B,EAAKrB,cADR,OACVsB,EADU,OAEdJ,EAAaI,GAFC,2CAAH,qDAIbF,MACC,IAED,qBAAKf,UAAU,OAAf,SACE,yBAASA,UAAU,QAAnB,SACGY,EAAUT,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,EAAD,CAAoBR,MAAOO,EAAKP,MAAOC,MAAOM,EAAKN,OAApCO,YCdzBa,IAASC,OACP,cAAC,IAAMC,WAAP,CAAkBC,QAAQ,EAA1B,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6bf30f9a.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = '2eabc78d837c127ef746b130b69eb798';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  debugger;\n  const response = await axios.get(`${API_BASE}${endpoint}`);\n  return response.data;\n};\n\nconst HomeList = {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'orginals',\n        title: 'Originais Netflix',\n        items: await basicFetch(\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para voce',\n        items: await basicFetch(\n          `/trending/all/week?&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'toprated',\n        title: 'Em alta',\n        items: await basicFetch(\n          `/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(\n          `/discover/tv?with_genres=28&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'comedia',\n        title: 'Comédia',\n        items: await basicFetch(\n          `/discover/tv?with_genres=35&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(\n          `/discover/tv?with_network=27&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(\n          `/discover/tv?with_genres=10749&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentário',\n        items: await basicFetch(\n          `/discover/tv?with_genres=99&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n    ];\n  },\n};\n\nexport default HomeList;\n","import React from 'react';\nimport './MovieRow.css';\n\nconst MovieRow = ({ title, items }) => {\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movie-row--listarea\">\n        <div className=\"movie-row--list\">\n          {items.results.length > 0 &&\n            items.results.map((item, key) => (\n              <div key={key} className=\"movieRow--item\">\n                <img\n                  src={`http://image.tmdb.org/t/p/w300/${item.poster_path}`}\n                  alt={item.original_title}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieRow;\n","import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\n\nconst InicioApp = () => {\n  const [movieList, setMovieList] = useState([]);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n    };\n    loadAll();\n  }, []);\n  return (\n    <div className=\"page\">\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default InicioApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode enable={false}>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}