{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","axios","get","response","data","HomeList","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setScrollX","className","style","fontSize","onClick","x","Math","round","window","innerWidth","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","FeaturedMovie","firstDane","Date","first_air_date","genres","i","push","name","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","overview","href","id","join","Header","black","InicioApp","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomNumber","floor","random","chosen","chosenInfo","scrolListenet","scrollY","addEventListener","removeEventListener","role","ReactDOM","render","StrictMode","enable","document","getElementById"],"mappings":"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","file":"static/js/main.9b311154.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = '2eabc78d837c127ef746b130b69eb798';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const response = await axios.get(`${API_BASE}${endpoint}`);\n  return response.data;\n};\n\nconst HomeList = {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'orginals',\n        title: 'Originais Netflix',\n        items: await basicFetch(\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para voce',\n        items: await basicFetch(\n          `/trending/all/week?&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'toprated',\n        title: 'Em alta',\n        items: await basicFetch(\n          `/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(\n          `/discover/tv?with_genres=28&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'comedia',\n        title: 'Comédia',\n        items: await basicFetch(\n          `/discover/tv?with_genres=35&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items: await basicFetch(\n          `/discover/tv?with_network=27&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items: await basicFetch(\n          `/discover/tv?with_genres=10749&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentário',\n        items: await basicFetch(\n          `/discover/tv?with_genres=99&language=pt-BR&api_key=${API_KEY}`,\n        ),\n      },\n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    if (movieId) {\n      switch (type) {\n        case 'movie':\n          info = await basicFetch(\n            `/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`,\n          );\n          return info;\n        case 'tv':\n          info = await basicFetch(\n            `/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`,\n          );\n          return info;\n        default:\n          info = null;\n          break;\n      }\n    }\n  },\n};\n\nexport default HomeList;\n","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst MovieRow = ({ title, items }) => {\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  };\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if (window.innerWidth - listW > x) {\n      x = window.innerWidth - listW - 60;\n    }\n    setScrollX(x);\n  };\n\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movie-row--left\">\n        <NavigateBeforeIcon\n          style={{ fontSize: 50 }}\n          onClick={handleLeftArrow}\n        />\n      </div>\n      <div className=\"movie-row--right\">\n        <NavigateNextIcon style={{ fontSize: 50 }} onClick={handleRightArrow} />\n      </div>\n\n      <div className=\"movie-row--listarea\">\n        <div\n          className=\"movie-row--list\"\n          style={{\n            marginLeft: scrollX,\n            width: items.results.length * 150,\n          }}\n        >\n          {items.results.length > 0 &&\n            items.results.map((item, key) => (\n              <div key={key} className=\"movieRow--item\">\n                <img\n                  src={`http://image.tmdb.org/t/p/w300/${item.poster_path}`}\n                  alt={item.original_title}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieRow;\n","import React from 'react';\nimport './FeaturedMovie.css';\n\nconst FeaturedMovie = ({ item }) => {\n  let firstDane = new Date(item.first_air_date);\n  let genres = [];\n  for (let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n  return (\n    <section\n      className=\"featured\"\n      style={{\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundImage: `url(http://image.tmdb.org/t/p/original${item.backdrop_path})`,\n      }}\n    >\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\"> {item.vote_average} pontos</div>\n\n            <div className=\"featured--year\"> {firstDane.getFullYear()}</div>\n\n            <div className=\"featured--seasons\">\n              {item.number_of_seasons} temporada\n              {item.number_of_seasons !== 1 ? 's' : ''}\n            </div>\n          </div>\n          <div className=\"featured--description\">{item.overview}</div>\n          <div className=\"featured--buttons\">\n            <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">\n              ► Assistir\n            </a>\n            <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">\n              + Minha Lista\n            </a>\n          </div>\n          <div className=\"featured--genres\">\n            <strong>Gêneros:</strong>\n            {genres.join(',')}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturedMovie;\n","import React from 'react';\nimport './Header.css';\n\nconst Header = ({ black }) => {\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img\n            alt=\"logo\"\n            src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"\n          ></img>\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img\n            alt=\"user\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n          ></img>\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nconst InicioApp = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(true);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //carrega lista\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //pega destaque\n      let originals = list.filter((i) => i.slug === 'orginals');\n      let randomNumber = Math.floor(\n        Math.random() * originals[0].items.results.length - 1,\n      );\n      let chosen = originals[0].items.results[randomNumber];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrolListenet = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n    window.addEventListener('scroll', scrolListenet);\n    return () => {\n      window.removeEventListener('scroll', scrolListenet);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n      {featuredData && <FeaturedMovie item={featuredData} />}\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Feito com{' '}\n        <span role=\"img\" aria-label=\"coracao\">\n          ♥\n        </span>{' '}\n        por Mariola\n      </footer>\n    </div>\n  );\n};\n\nexport default InicioApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode enable={false}>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}